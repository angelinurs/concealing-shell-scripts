shell-script: 
  psm_new:
    - CREATE TABLE biz_log_summary_$now PARTITION OF biz_log_summary FOR VALUES IN ( $s );
    - CREATE TABLE biz_log_result_$now PARTITION OF biz_log_result FOR VALUES IN ( $s );
    - create table sql_result_$now partition of sql_result for values from ('$now 000000') to ('$now 235959');
    - create table log_sql_$now partition of log_sql for values from ('$now 000000') to ('$now 235959');
    - create table rule_biz_$now partition of rule_biz for values in ('$now');
    - create table download_log_$now partition of download_log for values in ('$now');
    - create table download_log_result_$now partition of download_log_result for values in ('$now');
  summary_download:
    - DELETE FROM SUMMARY_DOWNLOAD WHERE PROC_DATE = '$now';
    - INSERT INTO SUMMARY_DOWNLOAD
      (log_delimiter,proc_date, system_seq, file_ext, file_ext_cnt)
      values ('DN','$now', '', '', 0);
    - insert into summary_download
      select
      'DN',
      A.proc_date,
      A.system_seq ,
      A.file_extension as file_ext,
      coalesce(sum(a.ext_cnt),0) as file_ext_cnt
      from (
      select
          a.proc_date,
          a.system_seq,
          regexp_replace(file_name, E'\\\\.[^.]+$', '') as file_name,
          split_part(file_name,'.', 2) as file_extension,
          count(distinct a.log_seq) as ext_cnt
      from download_log a
      join download_log_result b
      on a.log_seq = b.log_seq
      join regular_expression_mng rem
      on b.result_type = rem.privacy_type
      where a.proc_date = '$now'
      and b.proc_date = '$now'
      and rem.use_flag = 'Y'
      and rem.result_type_order <= '18'
      and (a.emp_user_name != '' and a.emp_user_name != 'null' and a.emp_user_name is not null)
      group by a.proc_date, a.system_seq, file_name, file_extension) A
      group by  A.file_extension, A.system_seq, A.proc_date;
  Extractor_startup:
    - DELETE FROM summary_abnormal WHERE PROC_DATE = '$now';
    - |
      INSERT INTO summary_abnormal
      (proc_date, system_seq, system_name, dept_id, dept_name, emp_user_id, emp_user_name, scenario1, scenario2, scenario3, scenario4, scenario5, cnt, logcnt)
      values ('$now', '', '', '', '', '', '', 0, 0, 0, 0, 0, 0, 0);
    - |
      INSERT INTO summary_abnormal
      (proc_date, system_seq, system_name, dept_id, dept_name, emp_user_id, emp_user_name, scenario1, scenario2, scenario3, scenario4, scenario5, cnt, logcnt)
      select '$now', system_seq, system_name, '', '', '', '', 0, 0, 0, 0, 0, 0, 0
      from system_master
      where system_seq != '01';
    - |
      INSERT INTO summary_abnormal
      (proc_date, system_seq, system_name, dept_id, dept_name, emp_user_id, emp_user_name, scenario1, scenario2, scenario3, scenario4, scenario5, cnt, logcnt)
      select occr_dt, system_seq, system_name, dept_id, dept_name, emp_user_id, emp_user_name
      , sum(sn1) as tot_sn1
      , sum(sn2) as tot_sn2
      , sum(sn3) as tot_sn3
      , sum(sn4) as tot_sn4
      , sum(sn5) as tot_sn5
      , sum(t_n_count) as tot_n_count
      , sum(t_rule_cnt) as tot_rule_cnt
      from (
              select occr_dt
                      , system_seq, system_name, dept_id, dept_name, emp_user_id, emp_user_name
                      , scen_seq
                      , (case when scen_seq = 1000 then count(emp_detail_seq) else 0 end) as sn1
                      , (case when scen_seq = 2000 then count(emp_detail_seq) else 0 end) as sn2
                      , (case when scen_seq = 3000 then count(emp_detail_seq) else 0 end) as sn3
                      , (case when scen_seq = 4000 then count(emp_detail_seq) else 0 end) as sn4
                      , (case when scen_seq = 5000 then count(emp_detail_seq) else 0 end) as sn5
                      , count(emp_detail_seq) as t_n_count
                      , sum(rule_cnt) as t_rule_cnt
              from (
                      select distinct ms.occr_dt
                              , ms.system_seq, sm.system_name, ms.dept_id, ms.dept_name, ms.emp_user_id, ms.emp_user_name
                              , rt.scen_seq
                              , rt.rule_seq
                              , dt.emp_detail_seq
                              , rule_cnt
                      from emp_detail ms
                              left join rule_biz dt
                                      on ms.emp_detail_seq = dt.emp_detail_seq
                              left join system_master sm
                                      --on dt.system_seq = sm.system_seq
                                      on ms.system_seq = sm.system_seq
                              left join ruletbl rt
                                      on rt.rule_seq = ms.rule_cd
                      where ms.occr_dt = '$now'
              ) rs
              group by occr_dt, system_seq, system_name, dept_id, dept_name, emp_user_id, emp_user_name, scen_seq
      ) rs
      group by occr_dt, system_seq, system_name, dept_id, dept_name, emp_user_id, emp_user_name;



